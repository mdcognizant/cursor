{
  "// Cursor Shell Monitor Integration - Enhanced Auto-Startup": "Ensures monitoring starts automatically every time",
  
  "terminal.integrated.shell.windows": "powershell.exe",
  "terminal.integrated.shellArgs.windows": [
    "-NoProfile",
    "-ExecutionPolicy", 
    "Bypass",
    "-Command",
    "& { Write-Host 'Initializing Cursor Shell Monitor...' -ForegroundColor Yellow; if (Test-Path '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat') { & '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat'; Write-Host 'Shell Monitor Active - All commands monitored for timeouts' -ForegroundColor Green; $host.UI.RawUI.WindowTitle = 'Cursor Shell Monitor Active' } else { Write-Host 'Shell Monitor setup not found - commands will run normally' -ForegroundColor Red }; }"
  ],
  
  "terminal.integrated.shell.linux": "/bin/bash",
  "terminal.integrated.shellArgs.linux": [
    "-c",
    "echo 'Initializing Cursor Shell Monitor...'; if [ -f ~/.cursor_monitor/setup_cursor_path.sh ]; then source ~/.cursor_monitor/setup_cursor_path.sh; echo 'Shell Monitor Active - All commands monitored for timeouts'; else echo 'Shell Monitor setup not found - commands will run normally'; fi; exec bash"
  ],
  
  "terminal.integrated.shell.osx": "/bin/bash", 
  "terminal.integrated.shellArgs.osx": [
    "-c", 
    "echo 'Initializing Cursor Shell Monitor...'; if [ -f ~/.cursor_monitor/setup_cursor_path.sh ]; then source ~/.cursor_monitor/setup_cursor_path.sh; echo 'Shell Monitor Active - All commands monitored for timeouts'; else echo 'Shell Monitor setup not found - commands will run normally'; fi; exec bash"
  ],
  
  "terminal.integrated.env.windows": {
    "CURSOR_MONITOR_ENABLED": "true",
    "CURSOR_MONITOR_TIMEOUT": "60",
    "CURSOR_MONITOR_AUTO_DIAGNOSE": "true",
    "CURSOR_MONITOR_AUTO_START": "true",
    "CURSOR_MONITOR_ROOT": "C:\\Projects\\Cursor\\Cursor"
  },
  
  "terminal.integrated.env.linux": {
    "CURSOR_MONITOR_ENABLED": "true", 
    "CURSOR_MONITOR_TIMEOUT": "60",
    "CURSOR_MONITOR_AUTO_DIAGNOSE": "true",
    "CURSOR_MONITOR_AUTO_START": "true",
    "CURSOR_MONITOR_ROOT": "/home/user/Projects/Cursor/Cursor"
  },
  
  "terminal.integrated.env.osx": {
    "CURSOR_MONITOR_ENABLED": "true",
    "CURSOR_MONITOR_TIMEOUT": "60", 
    "CURSOR_MONITOR_AUTO_DIAGNOSE": "true",
    "CURSOR_MONITOR_AUTO_START": "true",
    "CURSOR_MONITOR_ROOT": "/Users/user/Projects/Cursor/Cursor"
  },
  
  "// Auto-Startup Configuration": "Ensures shell monitoring starts with every terminal",
  "terminal.integrated.automationProfile.windows": {
    "source": "PowerShell",
    "args": [
      "-NoProfile",
      "-ExecutionPolicy",
      "Bypass", 
      "-Command",
      "& { $env:CURSOR_MONITOR_ENABLED='true'; Write-Host 'Auto-starting Cursor Shell Monitor...' -ForegroundColor Green; if (Test-Path '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat') { & '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat' } }"
    ]
  },
  
  "// Default Profile Configuration": "Ensures monitoring is the default behavior",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass", 
        "-Command",
        "& { Write-Host 'Starting Cursor with Shell Monitor Protection...' -ForegroundColor Cyan; if (Test-Path '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat') { & '$env:USERPROFILE\\.cursor_monitor\\setup_cursor_path.bat'; Write-Host 'SHELL MONITOR ACTIVE - Commands protected from hanging' -ForegroundColor Green; Write-Host 'Use git_monitor, npm_monitor, python_monitor etc. for monitored commands' -ForegroundColor Yellow } else { Write-Host 'Shell Monitor not configured - please run the setup script' -ForegroundColor Red }; }"
      ]
    },
    "PowerShell (Safe Mode)": {
      "source": "PowerShell",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass"
      ]
    }
  },
  
  "// Task Integration": "Auto-start monitoring for VS Code tasks",
  "terminal.integrated.cwd": "${workspaceFolder}",
  "terminal.integrated.inheritEnv": true,
  "terminal.integrated.enablePersistentSessions": true,
  
  "// Performance Optimizations": "Settings to improve command execution speed",
  "terminal.integrated.fontFamily": "Consolas, 'Courier New', monospace",
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.fastScrollSensitivity": 5,
  "terminal.integrated.scrollback": 1000,
  "terminal.integrated.rendererType": "dom",
  "terminal.integrated.gpuAcceleration": "auto",
  
  "// Git Integration": "Optimize Git operations in Cursor with monitoring",
  "git.autofetch": false,
  "git.autofetchPeriod": 0,
  "git.fetchOnPull": false,
  "git.pruneOnFetch": false,
  "git.confirmSync": false,
  "git.enableStatusBarSync": false,
  
  "// Workspace Settings": "Project-specific configurations for monitoring",
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/.cursor_monitor/**": true,
    "**/shellmonitor/__pycache__/**": true
  },
  
  "search.exclude": {
    "**/.git": true,
    "**/node_modules": true,
    "**/.cursor_monitor": true,
    "**/cursor_integration/bin": true,
    "**/shellmonitor/__pycache__": true
  },
  
  "// Code Generation Integration": "Ensure AI code generation uses monitored commands",
  "editor.suggest.showCommands": true,
  "editor.suggest.showKeywords": true,
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  
  "// Auto-Save and Session Persistence": "Ensure monitoring persists across sessions",
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "workbench.settings.enableNaturalLanguageSearch": true
} 