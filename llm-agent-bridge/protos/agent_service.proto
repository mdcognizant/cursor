syntax = "proto3";

package llm_agent_bridge;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/example/llm-agent-bridge/proto/agent";

// Agent Communication Service
service AgentCommunicationService {
  // Send a message to an agent
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  
  // Send a message and stream the response
  rpc SendMessageStream(SendMessageRequest) returns (stream MessageChunk);
  
  // Establish a bidirectional communication channel
  rpc Communicate(stream CommunicationRequest) returns (stream CommunicationResponse);
  
  // Get agent status and health
  rpc GetAgentStatus(GetAgentStatusRequest) returns (AgentStatusResponse);
  
  // List available agents
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
  
  // Subscribe to agent events
  rpc SubscribeToEvents(SubscribeEventsRequest) returns (stream AgentEvent);
}

// Agent Management Service
service AgentManagementService {
  // Create or register a new agent
  rpc CreateAgent(CreateAgentRequest) returns (CreateAgentResponse);
  
  // Update agent configuration
  rpc UpdateAgent(UpdateAgentRequest) returns (UpdateAgentResponse);
  
  // Remove an agent
  rpc RemoveAgent(RemoveAgentRequest) returns (RemoveAgentResponse);
  
  // Get agent configuration
  rpc GetAgentConfig(GetAgentConfigRequest) returns (GetAgentConfigResponse);
}

// Task Orchestration Service
service TaskOrchestrationService {
  // Execute a task across multiple agents
  rpc ExecuteTask(ExecuteTaskRequest) returns (ExecuteTaskResponse);
  
  // Execute a task with streaming updates
  rpc ExecuteTaskStream(ExecuteTaskRequest) returns (stream TaskUpdate);
  
  // Get task status
  rpc GetTaskStatus(GetTaskStatusRequest) returns (TaskStatusResponse);
  
  // Cancel a running task
  rpc CancelTask(CancelTaskRequest) returns (CancelTaskResponse);
}

// Message Types
message SendMessageRequest {
  string agent_id = 1;
  Message message = 2;
  MessageOptions options = 3;
  map<string, string> metadata = 4;
}

message SendMessageResponse {
  string message_id = 1;
  Message response = 2;
  MessageStatus status = 3;
  google.protobuf.Timestamp timestamp = 4;
  map<string, string> metadata = 5;
}

message Message {
  string id = 1;
  string content = 2;
  MessageType type = 3;
  string format = 4; // "text", "json", "markdown", etc.
  repeated Attachment attachments = 5;
  map<string, google.protobuf.Any> parameters = 6;
  google.protobuf.Timestamp created_at = 7;
}

message MessageChunk {
  string message_id = 1;
  string chunk_id = 2;
  string content = 3;
  bool is_final = 4;
  map<string, string> metadata = 5;
}

message MessageOptions {
  int32 timeout_seconds = 1;
  bool stream_response = 2;
  int32 max_tokens = 3;
  float temperature = 4;
  repeated string stop_sequences = 5;
  bool include_metadata = 6;
}

message Attachment {
  string id = 1;
  string name = 2;
  string mime_type = 3;
  bytes data = 4;
  string url = 5;
  int64 size = 6;
}

// Replace all enum values with unique names
// MessageType
enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  MESSAGE_TYPE_TEXT = 1;
  MESSAGE_TYPE_COMMAND = 2;
  MESSAGE_TYPE_QUERY = 3;
  MESSAGE_TYPE_RESPONSE = 4;
  MESSAGE_TYPE_ERROR = 5;
  MESSAGE_TYPE_SYSTEM = 6;
  MESSAGE_TYPE_FUNCTION_CALL = 7;
  MESSAGE_TYPE_FUNCTION_RESULT = 8;
}

// MessageStatus
enum MessageStatus {
  MESSAGE_STATUS_UNSPECIFIED = 0;
  MESSAGE_STATUS_PENDING = 1;
  MESSAGE_STATUS_PROCESSING = 2;
  MESSAGE_STATUS_COMPLETED = 3;
  MESSAGE_STATUS_FAILED = 4;
  MESSAGE_STATUS_CANCELLED = 5;
}

// Communication Types
message CommunicationRequest {
  oneof request {
    SendMessageRequest send_message = 1;
    GetAgentStatusRequest get_status = 2;
    SubscribeEventsRequest subscribe_events = 3;
  }
}

message CommunicationResponse {
  oneof response {
    SendMessageResponse message_response = 1;
    AgentStatusResponse status_response = 2;
    AgentEvent event = 3;
    ErrorResponse error = 4;
  }
}

// Agent Types
message Agent {
  string id = 1;
  string name = 2;
  string description = 3;
  AgentType type = 4;
  AgentStatus status = 5;
  AgentCapabilities capabilities = 6;
  AgentConfig config = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  map<string, string> metadata = 10;
}

message AgentCapabilities {
  repeated string supported_formats = 1;
  repeated string supported_languages = 2;
  bool supports_streaming = 3;
  bool supports_function_calling = 4;
  int32 max_concurrent_requests = 5;
  repeated string tools = 6;
}

message AgentConfig {
  string model = 1;
  google.protobuf.Struct parameters = 2;
  repeated string system_prompts = 3;
  int32 max_tokens = 4;
  float temperature = 5;
  int32 timeout_seconds = 6;
}

// AgentType
enum AgentType {
  AGENT_TYPE_UNSPECIFIED = 0;
  AGENT_TYPE_CHAT = 1;
  AGENT_TYPE_FUNCTION = 2;
  AGENT_TYPE_TOOL = 3;
  AGENT_TYPE_ORCHESTRATOR = 4;
  AGENT_TYPE_ANALYZER = 5;
  AGENT_TYPE_GENERATOR = 6;
}

// AgentStatus
enum AgentStatus {
  AGENT_STATUS_UNSPECIFIED = 0;
  AGENT_STATUS_INITIALIZING = 1;
  AGENT_STATUS_READY = 2;
  AGENT_STATUS_BUSY = 3;
  AGENT_STATUS_ERROR = 4;
  AGENT_STATUS_OFFLINE = 5;
  AGENT_STATUS_MAINTENANCE = 6;
}

// Agent Status and Management
message GetAgentStatusRequest {
  string agent_id = 1;
}

message AgentStatusResponse {
  Agent agent = 1;
  AgentHealth health = 2;
  AgentMetrics metrics = 3;
}

message AgentHealth {
  bool is_healthy = 1;
  repeated string issues = 2;
  google.protobuf.Timestamp last_check = 3;
  int32 uptime_seconds = 4;
}

message AgentMetrics {
  int64 total_requests = 1;
  int64 successful_requests = 2;
  int64 failed_requests = 3;
  float average_response_time = 4;
  float current_load = 5;
  google.protobuf.Timestamp last_activity = 6;
}

message ListAgentsRequest {
  string filter = 1;
  int32 page_size = 2;
  string page_token = 3;
  AgentType type_filter = 4;
  AgentStatus status_filter = 5;
}

message ListAgentsResponse {
  repeated Agent agents = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message CreateAgentRequest {
  Agent agent = 1;
}

message CreateAgentResponse {
  Agent agent = 1;
}

message UpdateAgentRequest {
  Agent agent = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message UpdateAgentResponse {
  Agent agent = 1;
}

message RemoveAgentRequest {
  string agent_id = 1;
}

message RemoveAgentResponse {
  bool success = 1;
}

message GetAgentConfigRequest {
  string agent_id = 1;
}

message GetAgentConfigResponse {
  AgentConfig config = 1;
}

// Task Orchestration
message Task {
  string id = 1;
  string name = 2;
  string description = 3;
  TaskType type = 4;
  TaskStatus status = 5;
  repeated TaskStep steps = 6;
  map<string, google.protobuf.Any> parameters = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  google.protobuf.Timestamp completed_at = 10;
}

message TaskStep {
  string id = 1;
  string agent_id = 2;
  string action = 3;
  google.protobuf.Struct parameters = 4;
  TaskStepStatus status = 5;
  google.protobuf.Any result = 6;
  repeated string dependencies = 7;
}

// TaskType
enum TaskType {
  TASK_TYPE_UNSPECIFIED = 0;
  TASK_TYPE_SEQUENTIAL = 1;
  TASK_TYPE_PARALLEL = 2;
  TASK_TYPE_CONDITIONAL = 3;
  TASK_TYPE_PIPELINE = 4;
}

// TaskStatus
enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_CREATED = 1;
  TASK_STATUS_QUEUED = 2;
  TASK_STATUS_RUNNING = 3;
  TASK_STATUS_COMPLETED = 4;
  TASK_STATUS_FAILED = 5;
  TASK_STATUS_CANCELLED = 6;
  TASK_STATUS_PAUSED = 7;
}

// TaskStepStatus
enum TaskStepStatus {
  TASK_STEP_STATUS_UNSPECIFIED = 0;
  TASK_STEP_PENDING = 1;
  TASK_STEP_RUNNING = 2;
  TASK_STEP_COMPLETED = 3;
  TASK_STEP_FAILED = 4;
  TASK_STEP_SKIPPED = 5;
}

message ExecuteTaskRequest {
  Task task = 1;
  bool stream_updates = 2;
}

message ExecuteTaskResponse {
  string task_id = 1;
  TaskStatus status = 2;
  google.protobuf.Any result = 3;
}

message TaskUpdate {
  string task_id = 1;
  TaskStatus status = 2;
  string step_id = 3;
  TaskStepStatus step_status = 4;
  google.protobuf.Any step_result = 5;
  float progress = 6;
  string message = 7;
}

message GetTaskStatusRequest {
  string task_id = 1;
}

message TaskStatusResponse {
  Task task = 1;
  float progress = 2;
}

message CancelTaskRequest {
  string task_id = 1;
}

message CancelTaskResponse {
  bool success = 1;
  string message = 2;
}

// Events
message AgentEvent {
  string id = 1;
  string agent_id = 2;
  EventType type = 3;
  google.protobuf.Any data = 4;
  google.protobuf.Timestamp timestamp = 5;
  map<string, string> metadata = 6;
}

// EventType
enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_AGENT_CREATED = 1;
  EVENT_TYPE_AGENT_UPDATED = 2;
  EVENT_TYPE_AGENT_REMOVED = 3;
  EVENT_TYPE_AGENT_STATUS_CHANGED = 4;
  EVENT_TYPE_MESSAGE_RECEIVED = 5;
  EVENT_TYPE_MESSAGE_SENT = 6;
  EVENT_TYPE_TASK_STARTED = 7;
  EVENT_TYPE_TASK_COMPLETED = 8;
  EVENT_TYPE_TASK_FAILED = 9;
  EVENT_TYPE_ERROR_OCCURRED = 10;
}

message SubscribeEventsRequest {
  repeated string agent_ids = 1;
  repeated EventType event_types = 2;
  string filter = 3;
}

// Error handling
message ErrorResponse {
  string code = 1;
  string message = 2;
  repeated ErrorDetail details = 3;
}

message ErrorDetail {
  string field = 1;
  string code = 2;
  string message = 3;
} 